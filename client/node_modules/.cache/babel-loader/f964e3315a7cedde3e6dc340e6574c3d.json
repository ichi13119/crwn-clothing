{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/ichihara/Desktop/1st-react/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,gBAHP;AAKA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPI,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAOE,OAAMC,KAAN,EAAa;AACb,UAAMjB,GAAG,CAACkB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUE,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAChE,MAAG;AACD,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMV,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPI,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAPD,CAOE,OAAMC,KAAN,EAAY;AACZ,UAAMjB,GAAG,CAACwB,kBAAkB,CAACP,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACD;AACD,OAAO,UAAUkB,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCT,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all ,call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n  SignInSuccess,\n  SignInFailure\n} from './user.actions';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(\n      SignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n    );\n  } catch(error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n  try{\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(\n      SignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\n    );\n  } catch(error){\n    yield put(emailSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)  \n  ]);\n}"]},"metadata":{},"sourceType":"module"}